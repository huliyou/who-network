{"version":3,"sources":["../src/POST.js"],"names":[],"mappings":";;;;;;;AAOA;;;;;;;;;;;;;AAFA,QAAQ,aAAR,EAAuB,QAAvB;AACA,QAAQ,kBAAR;AAGO,IAAM;AAAA,sDAAW,iBAAO,IAAP,EAAqB,MAArB;AAAA,QAChB,UADgB,EAEhB,IAFgB,EAId,QAJc,EAYd,MAZc;AAAA;AAAA;AAAA;AAAA;AAChB,sBADgB,GACK,iBAAO,OAAP,GAAiB,IADtB;AAEhB,gBAFgB,GAED,KAAK,SAAL,CAAe,MAAf,CAFC;AAAA;AAAA;AAAA,mBAIG,MAAM,UAAN,EAAkB;AACvC,sBAAQ,MAD+B;AAEvC,uBAAS;AACP,wBAAQ,KADD;AAEP,gCAAgB;AAFT,eAF8B;AAMvC;AANuC,aAAlB,CAJH;;AAAA;AAId,oBAJc;AAAA;AAAA,mBAYC,SAAS,IAAT,EAZD;;AAAA;AAYd,kBAZc;;AAapB,oBAAQ,GAAR,gBAAyB,UAAzB,oBAAkD,MAAlD;AAboB,6CAcb,MAda;;AAAA;AAAA;AAAA;;AAgBpB,oBAAQ,IAAR;AAhBoB,6CAiBb;AACL,sBAAQ,YAAI;AADP,aAjBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAuBA,IAAM;AAAA,sDAAW,kBAAO,IAAP,EAAqB,MAArB;AAAA,QAChB,UADgB,EAEhB,QAFgB,EAGb,GAHa,EAMhB,IANgB,EAQd,QARc,EAgBd,MAhBc;AAAA;AAAA;AAAA;AAAA;AAChB,sBADgB,GACK,iBAAO,OAAP,GAAiB,IADtB;AAEhB,oBAFgB,GAEL,IAAI,QAAJ,EAFK;;AAGtB,iBAAS,GAAT,IAAgB,MAAhB,EAAwB;AACtB,uBAAS,MAAT,CAAgB,GAAhB,EAAqB,OAAO,GAAP,CAArB;AACD;AACK,gBANgB,GAMT,QANS;AAAA;AAAA;AAAA,mBAQG,MAAM,UAAN,EAAkB;AACvC,sBAAQ,MAD+B;AAEvC,uBAAS;AACP,wBAAQ,KADD;AAEP,gCAAgB;AAFT,eAF8B;AAMvC;AANuC,aAAlB,CARH;;AAAA;AAQd,oBARc;AAAA;AAAA,mBAgBC,SAAS,IAAT,EAhBD;;AAAA;AAgBd,kBAhBc;;AAiBpB,oBAAQ,GAAR,gBAAyB,UAAzB,oBAAkD,MAAlD;AAjBoB,8CAkBb,MAlBa;;AAAA;AAAA;AAAA;;AAoBpB,oBAAQ,IAAR;AApBoB,8CAqBb;AACL,sBAAQ,aAAI;AADP,aArBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAX;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"POST.js","sourcesContent":["/**\n * Happy Hacking\n * Created by leiyouwho on 2/5/2016.\n */\n\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\nimport Global from './Global';\n\nexport const POSTJSON = async (path: string, params: Object ) => {\n  const RequestURL: string = Global.RootURL + path;\n  const body: string = JSON.stringify(params);\n  try {\n    const response = await fetch(RequestURL, {\n      method: 'POST',\n      headers: {\n        Accept: '*/*',\n        'Content-Type': 'application/json',\n      },\n      body,\n    });\n    const result = await response.json();\n    console.log(`POSTJSON: ${RequestURL} => result: ${result} `);\n    return result;\n  } catch (err) {\n    console.warn(`POSTJSON => err: ${err}`);\n    return {\n      errMsg: err.message,\n    };\n  }\n};\n\nexport const POSTForm = async (path: string, params: Object ) => {\n  const RequestURL: string = Global.RootURL + path;\n  const formData = new FormData();\n  for (let key in params) {\n    formData.append(key, params[key]);\n  }\n  const body = formData;\n  try {\n    const response = await fetch(RequestURL, {\n      method: 'POST',\n      headers: {\n        Accept: '*/*',\n        'Content-Type': 'application/json',\n      },\n      body,\n    });\n    const result = await response.json();\n    console.log(`POSTForm: ${RequestURL} => result: ${result} `);\n    return result;\n  } catch (err) {\n    console.warn(`POSTForm => err: ${err}`);\n    return {\n      errMsg: err.message,\n    };\n  }\n};"]}